package Foreign.Currency;


        import java.text.NumberFormat;
        import java.util.Scanner;

public class ForeignCurrency {

    static Scanner sc = new Scanner (System.in);
    static double rGBP, rEUR, rJPY, rCAD, rRUB;

    public static void main(String[] args) {
        System.out.println("Welcome to the Foreign Currency Calculator.");
        getRates();
        doValuation();
        System.out.println("Thanks for using the Foreign Currency Calculator.");
    } //end of main}}
    public static void getRates() {
        System.out.println("Enter currency rates per US $");

        rEUR = getOneRate("EUR");
        rGBP = getOneRate("GBP");
        rJPY = getOneRate("JPY");
        rCAD = getOneRate("CAD");
        rRUB = getOneRate("RUB");
    }//end ofgetRates
    public static double getOneRate(String currency){
        double rate = 0;

        do {
            try {
                System.out.print(currency + ":");
                rate = sc.nextDouble();
                if (rate <= 0){
                    System.out.println("Rate must be > zero.");
                }
            } catch (Exception e) {
                System.out.println("Illegal rate: must be positive value.");
                sc.nextLine();
                rate = 0;

            }} while (rate <= 0);
        return rate ;
    }  //end of getOneRate

    public static void doValuation() {
        int choice, qty;
        double cval=0, totval = 0;
        NumberFormat curr = NumberFormat.getCurrencyInstance();

        int[] units = new int [5];
        for (int i = 0; i < 5; i++) {
            units[i] = 0;

        }
        double [] ctot = { 0.0, 0.0, 0.0, 0.0, 0.0 };
        String[] cnm = { "EUR", "GBP", "JPY", "CAD", "RUB" };

        choice = getChoice();
        while (choice != 0) {
            cval = 0;
            switch (choice)  {

                case 1:
                    qty = getQty("How many Euros?")  ;
                    cval = qty * rEUR;
                    System.out.println(qty + " Euros has a value of: " +
                            curr.format(cval));
                    units[0] += qty; //total EUR units
                    ctot[0] += cval;
                    break;
                case 2:
                    qty = getQty("How many Pounds Sterling? ");
                    cval = qty * rGBP;
                    System.out.println(qty + "pounds has a value of: " +
                            curr.format(cval));
                    units[choice-1] += qty;
                    ctot[choice-1] += cval;
                    break;
                case 3:
                    qty = getQty("How many Japanese Yen?");
                    cval = qty * rJPY;
                    System.out.println(qty + " Yen has a value of:" +
                            curr.format(cval));
                    units[choice-1] += qty;
                    ctot[choice-1] += cval;
                    break;
                case 4:
                    qty = getQty("How many Canadian Dollars? ");
                    cval = qty * rCAD;
                    System.out.println(qty + " Canadian Dollars has a value of:" +
                            curr.format(cval));
                    break;
                case 5:
                    qty = getQty("How many Russian Rubles? ");
                    cval = qty * rRUB;
                    System.out.println(qty + " Rubles has a value of:" +
                            curr.format(cval));
                    units[choice-1] += qty;
                    ctot[choice-1] += cval;
                    break;
                case 9:
                    getRates();
                    break;

                default:
                    System.out.println("Unknown currency type.");
                    break;
                //end of switch


            }
            totval += cval;    //same as: totval = totval + cval

            choice = getChoice();
        }//end of while

        for(int i=0; i<5; i++) {
            System.out.println(cnm[i] + ": " + units[i] +
                    "units costing " +
                    curr.format(ctot[i]));
        }
        System.out.println("Total value purchased = " +
                curr.format(totval));
    }//end of doValuation


    public static int getChoice()  {
        int c = -1;
        do {
            try {
                System.out.print("Select Currency (1=EUR, 2=GBP, 3=JPY, 4=CAD, 5=RUB, 9 =New Rates, 0=Quit): ");
                c = sc.nextInt();
                if (c < 0 || c > 5 && c !=9) {
                    System.out.println("Invalid selection: 0,1,2,3,4,5, or 9 only");
                    c= -1;
                    //end of if
                }
            } catch (Exception e){
                System.out.println("Invalid selection: 0,1,2,3,4,5, or 9 only");
                sc.nextLine();
                c = -1;
                //end of catch
            } }while (c < 0);
        return c;

    }
    //end of getChoice()
    public static int getQty(String ctype) {
        int q = -1;
        do {
            try {
                System.out.print(ctype) ;
                q = sc.nextInt();
                if (q < 0) {
                    System.out.println("quantity must be non-negative.");
                }
            } catch (Exception e) {
                System.out.println("Illegal quantity: must be non-negative integer.");
                sc.nextLine();
                q = -1;
            }


        } while (q < 0);
        return q;
    }
}
