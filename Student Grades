package StudentGrades;
//import static java.lang.System.out;
import java.util.Arrays;
import java.util.Scanner;
/**
 *
 * @author katieheaney
 */
public class StudentGrades {

    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        String sid="";
        System.out.println("Welcome to the Grading Program");

        sid = getStudentID();
        while (!sid.equalsIgnoreCase("quit")) {
            //if (sc.hasNext()) {
            calcGrade(sid);
            // }
            //sc.nextLine();
            sid = getStudentID();

        } //end of while
        System.out.println("Thanks for using the Grading Program");
    }//end of main

    public static String getStudentID() {
        String id="";
        boolean goodval = false;

        do {
            System.out.print("Student ID (quit to exit): ");
            id = sc.nextLine();
            //validate id:
            try {
                if (id.isEmpty()) {
                    System.out.println("Error: Please enter an ID");
                } else if (id.equalsIgnoreCase("QUIT")) {
                    goodval = true;
                } else if (!id.substring(0,1).equals("A")){
                    System.out.println("Error: First character not 'A'");
                } else if (id.length() !=9) {
                    System.out.println("Error: 'A' must be followed by 8 digits");
                } else {
                    long d = Long.parseLong(id.substring(1));
                    if (d<= 0) {
                        System.out.println("Error: Numeric component must be > 0");
                    } else {
                        goodval = true;
                    }

                }
            } catch (Exception e) {
                System.out.println("Error: Value after 'A' must be numeric.");
            }
        } while (!goodval);
        return id;
    } //end of getStudentID

    public static void calcGrade(String sid) {
        double q1,q2,q3,q4,q5,qm,mt,pr,fe,qavg,cavg;
        String lgrade;

        q1 = getScore("Quiz 1 score: ");
        q2 = getScore("Quiz 2 score: ");
        q3 = getScore("Quiz 3 score: ");
        q4 = getScore("Quiz 4 score ");
        q5 = getScore("Quiz 5 score; ");
        qm = getScore("Quiz make-up score: ");
        mt = getScore("Midterm score: ");
        pr = getScore("Problems score: ");

        double[] q = { q1,q2,q3,q4,q5,qm };
        Arrays.sort(q);
        qavg = (q[2] + q[3] + q[4] + q[5]) / 4.0;
        if (qavg >= 90 && mt >= 90 && pr >= 90){
            lgrade = "A";
            cavg = (qavg + mt + pr)/3.0;

        }else{
            fe = getScore("Final exam: ");
            cavg = 0.5*qavg +
                    0.15 * mt +
                    0.1 * pr +
                    0.25 * fe;
            if (cavg >= 89.5){
                lgrade = "A";

            } else if (cavg >= 79.5) {
                lgrade = "B";

            } else if (cavg >= 69.5) {
                lgrade = "C";


            } else if (cavg >= 59.5) {
                lgrade = "D";

            } else  {
                lgrade = "F";


            }
        }
        System.out.println("Student " + sid +
                " has a quiz average of: " + qavg +
                " has a course average of: " + cavg +
                " has a letter grade of: " + lgrade);

    }
    public static double getScore(String prompt) {
        //final version of method must be 'robust;
        double score;
        do {
            try {

                //for (score = 0; score < 125; score++){
                System.out.print("What is the score? (0-125, 126=Error: value maximum is 125, 0=quit): ");
                score = sc.nextDouble();
                if (score < 0) {
                    System.out.println("Error: value cannot be negative");
                } else if (score > 125) {
                    System.out.println ("125 is max score, 126 for");
                } //end of else

            } catch (Exception e) {
                System.out.println ("Illegal input: 0-125 only");

                sc.nextLine();
                score = 126;
            }

        } while (score < 0 || score > 126);
        return score;
    }} //end of getScore
